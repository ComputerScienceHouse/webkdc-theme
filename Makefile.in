# Makefile for the webauth software
# $Id$

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@

@SET_MAKE@

# The directory name and tar file to use when building a release.
TARDIR_BASE = @PACKAGE_TARNAME@-base-@PACKAGE_VERSION@
TARDIR_FULL = @PACKAGE_TARNAME@-full-@PACKAGE_VERSION@
TAR_BASE    = $(TARDIR_BASE).tar
TAR_FULL    = $(TARDIR_FULL).tar

# DISTDIRS gets all directories from the MANIFEST, and DISTFILES gets all
# regular files.  Anything not listed in the MANIFEST will not be included in
# a distribution.  These are arguments to sed.
DISTDIRS    = -e 1,2d -e '/(Directory)/!d' -e 's/ .*//'
DISTFILES   = -e 1,2d -e '/(Directory)/d' -e 's/ .*//'


SUBDIRS = src
ALLDIRS = src tests

.PHONY: all check check-manifest clean dist distclean doc docs install
.PHONY: install-tests test tests

all install: Makefile 
	@for subdir in $(SUBDIRS); do \
	    echo "making $@ in $$subdir"; \
	    ( cd $$subdir && $(MAKE) $@ ) || exit 1; \
	done

check test tests:
	cd tests && $(MAKE) all

install-tests:
	cd tests && $(MAKE) install

clean depend:
	@for subdir in $(ALLDIRS); do \
	    echo "making $@ in $$subdir"; \
	    ( cd $$subdir && $(MAKE) $@ ) || exit 1; \
	done

doc docs:
	doxygen doc/doxygen.cfg

distclean: clean
	rm -rf config.status config.cache config.log config.h libtool \
	       Makefile src/Makefile src/bindings/Makefile \
	       src/bindings/perl/Makefile src/libwebauth/Makefile \
	       src/modules/Makefile src/modules/webauth/Makefile \
	       src/modules/webkdc/Makefile src/utils/Makefile tests/Makefile \
	       tests/libwebauth/Makefile \
	       src/bindings/perl/WebAuth/Makefile.PL *~ core \#* \
	       autom4te*.cache LIST.* webauth-*-@PACKAGE_VERSION@

# Make a release.  We create a release by recreating the directory structure
# and then copying over all files listed in the MANIFEST.  If it isn't in the
# MANIFEST, it doesn't go into the release.
dist:
	rm -rf $(TARDIR)
	rm -f webauth*.tar.gz
	mkdir $(TARDIR_FULL)
	for d in `sed $(DISTDIRS) MANIFEST` ; do \
	    mkdir -p $(TARDIR_FULL)/$$d || exit 1 ; \
	done
	for f in `sed $(DISTFILES) MANIFEST` ; do \
	    cp $$f $(TARDIR_FULL)/$$f || exit 1 ; \
	done
	find $(TARDIR_FULL) -type f -print | xargs touch -t `date +%m%d%H%M.%S`
	tar cf $(TAR_FULL) $(TARDIR_FULL)
	gzip -9 $(TAR_FULL)
	mkdir $(TARDIR_BASE)
	for d in `grep -v 'WebKDC -- ' MANIFEST | sed $(DISTDIRS)` ; do \
	    mkdir -p $(TARDIR_BASE)/$$d || exit 1 ; \
	done
	for f in `grep -v 'WebKDC -- ' MANIFEST | sed $(DISTFILES)` ; do \
	    cp $$f $(TARDIR_BASE)/$$f || exit 1 ; \
	done
	find $(TARDIR_BASE) -type f -print | xargs touch -t `date +%m%d%H%M.%S`
	tar cf $(TAR_BASE) $(TARDIR_BASE)
	gzip -9 $(TAR_BASE)

# Check the MANIFEST against the files present in the current tree, building a
# list with tools/mkmanifest and running diff between the lists.
check-manifest:
	sed -e 1,2d -e 's/ .*//' MANIFEST > LIST.manifest
	tools/mkmanifest > LIST.real
	diff -u LIST.manifest LIST.real
