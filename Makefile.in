# Makefile for WebAuth
# $Id$

srcdir		= @srcdir@
top_srcdir	= @top_srcdir@
top_builddir	= @top_builddir@
VPATH		= @srcdir@

APACHE_ROOT	= @APACHE_ROOT@

@SET_MAKE@

# The directory name and tar file to use when building a release.
PACKAGE		= @PACKAGE_TARNAME@
VERSION		= @PACKAGE_VERSION@
TARDIR		= $(PACKAGE)-$(VERSION)
DEBNAME		= $(PACKAGE)_$(VERSION)
TARNAME		= $(TARDIR).tar

# The tarball names to use for the WebAuth and WebKDC module packages.
WEBAUTH_PKG	= $(PACKAGE)-modules-$(VERSION).tar
WEBKDC_PKG	= $(PACKAGE)-webkdc-$(VERSION).tar

# DISTDIRS gets all directories from the MANIFEST, and DISTFILES gets all
# regular files.  Anything not listed in the MANIFEST will not be included in
# a distribution.  These are arguments to sed.
DISTDIRS	= -e 1,2d -e '/(Directory)/!d' -e 's/ .*//'
DISTFILES	= -e 1,2d -e '/(Directory)/d' -e 's/ .*//'


SUBDIRS		= src
ALLDIRS		= src tests

.PHONY: all check check-manifest clean deb-prep dist dist-prep distclean doc
.PHONY: docs install install-tests install-webkdc package-webauth
.PHONY: package-webkdc test tests

all install: Makefile 
	@for subdir in $(SUBDIRS); do \
	    echo "making $@ in $$subdir"; \
	    ( cd $$subdir && $(MAKE) $@ ) || exit 1; \
	done

check test tests:
	cd tests && $(MAKE) all

install-tests:
	cd tests && $(MAKE) install

install-webkdc:
	cd src && $(MAKE) install-webkdc

clean depend:
	@for subdir in $(ALLDIRS); do \
	    echo "making $@ in $$subdir"; \
	    ( cd $$subdir && $(MAKE) $@ ) || exit 1; \
	done

doc docs:
	doxygen doc/doxygen.cfg

distclean: clean
	rm -rf config.status config.cache config.log config.h libtool \
	       mod-config.h Makefile src/Makefile src/bindings/Makefile \
	       src/bindings/perl/Makefile src/libwebauth/Makefile \
	       src/libwebauth/webauth.h src/modules/Makefile \
	       src/modules/webauth/Makefile src/modules/webkdc/Makefile \
	       src/utils/Makefile src/webkdc/Makefile tests/Makefile \
	       tests/libwebauth/Makefile \
	       src/bindings/perl/WebAuth3/Makefile.PL *~ core \#* \
	       autom4te*.cache LIST.*

# Prepare to make a release.  We recreate the directory structure and then
# copy over all files listed in the MANIFEST.  If it isn't in MANIFEST, it
# doesn't go into the release.  This rule is split off from dist so that
# we can also use it to build Debian packages.
dist-prep:
	cd src/utils && make wa_keyring.1
	rm -rf $(TARDIR)
	mkdir $(TARDIR)
	for d in `sed $(DISTDIRS) MANIFEST` ; do \
	    mkdir -p $(TARDIR)/$$d || exit 1 ; \
	done
	for f in `sed $(DISTFILES) MANIFEST` ; do \
	    cp $$f $(TARDIR)/$$f || exit 1 ; \
	done
	find $(TARDIR) -type f -print | xargs touch -t `date +%m%d%H%M.%S`

# Make the release tarballs.
dist: dist-prep
	rm -f $(TARNAME).gz $(TARNAME).gz.md5
	tar cf $(TARNAME) $(TARDIR)
	gzip -9 $(TARNAME)
	md5sum $(TARNAME).gz > $(TARNAME).gz.md5

# Prepare to make a Debian package.  This doesn't do the actual work of
# creating the package; there are too many different flags we might want to
# use.  It just copies things around so that the Debian packaging will work
# properly.
deb-prep: dist
	rm -f *.orig.tar.gz $(DEBNAME)* *_$(VERSION)-*.deb
	cp $(TARNAME).gz $(PACKAGE)_$(VERSION).orig.tar.gz

# Check the MANIFEST against the files present in the current tree, building a
# list with tools/mkmanifest and running diff between the lists.
check-manifest:
	sed -e 1,2d -e 's/ .*//' MANIFEST > LIST.manifest
	tools/mkmanifest > LIST.real
	diff -u LIST.manifest LIST.real

# Make a package of just the Stanford configuration files and the WebAuth
# modules, for binary distributions.
package-webauth: install
	tools/mkpackage '$(APACHE_ROOT)' '$(WEBAUTH_PKG)' \
	    'conf/stanford-*' 'modules/mod_webauth*'

# Make a package of the WebKDC files and module.
package-webkdc: install install-webkdc
	tools/mkpackage '$(APACHE_ROOT)' '$(WEBKDC_PKG)' \
	    'modules/mod_webkdc*' 'webkdc'
