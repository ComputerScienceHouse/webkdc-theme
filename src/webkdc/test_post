#!/usr/pubsw/bin/perl

use strict;
use warnings;

use lib '../bindings/perl/WebAuth3/blib/lib';
use lib '../bindings/perl/WebAuth3/blib/arch/auto/WebAuth3';

use WebAuth3 qw(:base64 :const :krb5 :key);

use WebKDC;
use WebKDC::Token;
use WebKDC::WebRequest;
use WebKDC::WebResponse;
use WebKDC::XmlDoc;

use Carp;
use UNIVERSAL qw(isa);

use LWP::UserAgent;

our $C_WAS_KEYTAB = "shred_webauth.keytab";
#our $C_WAS_KEYRING_PATH = "was.keyring";

our $C_WEBKDC_K5SERVICE = "webauth";
our $C_WEBKDC_HOST = "lichen.stanford.edu";


eval {

    my $c = krb5_new();

    krb5_init_via_keytab($c, $C_WAS_KEYTAB);

    my $princ = krb5_service_principal($c, $C_WEBKDC_K5SERVICE,
				       $C_WEBKDC_HOST);
    my $request = base64_encode(krb5_mk_req($c, $princ));


    my $out = new WebKDC::XmlDoc;

    $out->start('getTokensRequest');
    $out->start('messageId', undef, 'yyz001')->end();
    $out->start('requesterCredential', {'type' => 'krb5'}, $request)->end();
    $out->start('tokens');
    $out->start('token', {'type'=>'service', 'id'=> 0})->end();
    $out->end('tokens');
    $out->end('getTokensRequest');

    my $xml = $out->root->to_string(1);
    print "-------- generated --------\n";
    print "$xml\n";
    print "-------- generated --------\n";

    my $ua = new LWP::UserAgent;

    my $post_url = "https://lichen.stanford.edu:8443/webkdc-service/";
    my $http_req = new HTTP::Request(POST=> $post_url);
    $http_req->content_type('text/xml');
    $http_req->content($out->root->to_string());

    my $http_res = $ua->request($http_req);
    
    if ($http_res->is_success) {
	print $http_res->content;
    } else {
	print "post failed\n";
	print $http_res->content;
    }


#    my $resp = WebKDC::process_get_tokens($out->root());
#
#    my $xml2 = $resp->to_string(1);

#    print "-------- resp --------\n";
#    print "$xml2\n";
#    print "-------- resp --------\n";

};

if ($@) {
    print "OOOPS $@\n";
}
