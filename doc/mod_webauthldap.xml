<?xml version="1.0"?>
<!DOCTYPE modulesynopsis SYSTEM "../style/modulesynopsis.dtd">
<?xml-stylesheet type="text/xsl" href="../style/manual.en.xsl"?>
<modulesynopsis metafile="mod_webauthldap.xml.meta">

<name>mod_webauthldap</name>
<description>LDAP authorization and lookup for WebAuth V3</description>
<status>Contributed</status>
<sourcefile>mod_webauthldap.c</sourcefile>
<identifier>webauthldap_module</identifier>

<summary>

<p>This module provides authorization based on configurable LDAP privilege
groups.  It also allows retrieving adhoc LDAP attributes and places them
in environment variables.  The module was designed for use with an LDAP
server that supports LDAP version 3 and allows binds authenticated using
SASL GSSAPI Kerberos 5.</p>

<p>For other Webauth documentation see the
<a href="http://webauth.stanford.edu/">WebAuth documentation</a>.</p>
</summary>

<section><title>Generic Minimal Config File</title>

<p>The following example shows the minimum config file required to
configure this module.</p>

<example><title>Example</title>
<pre>
LoadModule webauthldap_module modules/mod_webauthldap.so

WebAuthLdapHost ldap.acme.com
WebAuthLdapBase dc=acme,dc=com
WebAuthLdapAuthorizationAttribute priviledgeAttribute
WebAuthLdapKeytab conf/webauth/ldapkeytab webauth/myservername
WebAuthLdapTktCache /tmp/webauthldap.tkt
</pre>
</example>
</section>

<section><title>Using WebAuthLdap Authorization</title>

<p>To restrict access to particular priviledge group(s) place the
<code>require privgroup &lt;group name&gt;</code> directives in a
.htaccess file, a Location block or a Directory block where <code>AuthType
WebAuth</code> has already been applied.  Multiple directives mean "user
must belong to at least one of these groups."  There is currently no way
to require that a user be in multiple groups.</p>

<p>When combining with other require directives, the order of checking is
top to bottom, so e.g. by placing <code>require valid-user</code> at the
top, all authenticated users will be authorized no matter what group
restrictions are below it.  By default, if a user is authorized, the
WEBAUTH_LDAPAUTHRULE variable will be set to indicate what rule succeded
in authorizing a user.</p>

<p>It is possible to combine <code>Require privgroup</code> with Apache's
regular <code>Require group</code>.  In this case if no LDAP group
matches, the regular auth groups can be checked by apache in the usual
manner, and access granted if the user is in them.  However when using
WebAuthLdap the AuthAuthoritative directive must be set to off, otherwise
mod_access will logs messages complaining that it doesn't recognize the
<code>Require privgroup</code> directives.</p>

<example><title>Example</title>
<pre>
&lt;Location /private/&gt;
  AuthType WebAuth
  Require privgroup stanford:staff
  Require privgroup stanford:faculty
&lt;/Location&gt;
</pre>
</example>

</section>

<section><title>Ad hoc attributes lookup</title>

<p>By using the WebAuthLdapAttribute directive in a .htaccess file, a
Location block or a Directory block, any attributes available to the
WebAuth server can be set into environment variables for use in cgi
scripts.  In case the requested attribute is not available from the LDAP
server, there is no error and the environment variable is simply not set
for that attribute.</p>

<p>The name of the environment variable is formed by prepending
WEBAUTH_LDAP_ to the uppercased attribute name.  In the case of mulivalued
attributes, the WEBAUTH_LDAP_ATTRIBUTENAME variable will contain one value
randomly picked from the set, and all the values of this attribute will
also be set into WEBAUTH_LDAP_ATTRIBUTENAME1, WEBAUTH_LDAP_ATTRIBUTENAME2,
and so on, in no particular order.  The multivalued attribute behavior can
be changed by setting the
<a href="#webauthldapseparator">WebAuthLdapSeparator</a> directive, in which
case WEBAUTH_LDAP_ATTRIBUTENAME will be set to the concatenation of all
returned values, separated by that separator.</p>

<example><title>Example</title>
<pre>
&lt;Location /private/&gt;
  AuthType WebAuth
  Require valid-user
  WebAuthLdapAttribute displayName
  WebAuthLdapAttribute description
  WebAuthLdapAttribute telephoneNumber
&lt;/Location&gt;
</pre>
</example>

</section>

<section><title>Webauth 2.x backward compatibility</title>

<p>StanfordAuth as an AuthType is supported as a form of backward
compatibility, to ease the transition from WebAuth v2.  When it is used,
require group directives are interpreted as checks on LDAP privgroups if
they contain a colon.</p>

<example><title>StanfordAuth Example</title>
<pre>
&lt;Location /private/&gt;
  AuthType StanfordAuth
  require group stanford:stanford
&lt;/Location&gt;
</pre>
</example>

<p>If you wish to have the legacy SU_AUTH_DIRNAME and SU_AUTH_DIRMAIL
variables set, you need to use the new WebAuthLdapAttribute directives
explicitly.  If you dont want to go through and change numerous .htaccess
files, you can set the WebAuthLdapAttribute directive on some top location
above all the .htaccess files and they wil be inherited down.</p>

<example><title>With Name and Mail variables:</title>
<pre>
&lt;Location /top/&gt;
  WebAuthLdapAttribute mail
  WebAuthLdapAttribute displayName
&lt;/Location&gt;

# .htaccess file in /top/mydir can remain like this:
AuthType StanfordAuth
require group stanford:stanford
</pre>
</example>

<p>This backward compatibility support is probably of interest only to
Stanford users, since WebAuth v2 was never publically released.</p>
</section>


<directivesynopsis>
<name>WebAuthLdapAttribute</name>
<description>LDAP attribute to place in the environment</description>
<syntax>WebAuthLdapAttribute <em>ldap_attribute_name</em></syntax>
<default>"displayName", "mail"</default>
<contextlist>
  <context>directory</context>
</contextlist>

<usage>
<p>All attributes indicated by this directive will be looked up in LDAP
and their values, if found, will be placed into the environment.  Only one
attribute may be listed per directive, but multiple directives can be
used.</p>

<p>The name of the environment variable is formed by prepending
WEBAUTH_LDAP_ to the uppercased attribute name.  By default, in the case
of mulivalued attributes, the WEBAUTH_LDAP_ATTRIBUTENAME variable will
contain one value randomly picked from the set, and all the values of this
attribute will also be set into WEBAUTH_LDAP_ATTRIBUTENAME1,
WEBAUTH_LDAP_ATTRIBUTENAME2, and so on, in no particular order.  To
override this behavior, see
<a href="#webauthldapseparator">WebAuthLdapSeparator</a>.</p>

<p>The attributes can be any attribute found in your LDAP server that
the server using this module has access to read.</p>

<example><title>Example</title>
&lt;Location /private/&gt;<br />
AuthType WebAuth<br />
Require privgroup stanford:staff<br />
WebAuthLdapAttribute suAffiliation<br />
WebAuthLdapAttribute displayName<br />
WebAuthLdapAttribute suUnivid<br />
&lt;/Location&gt;<br/>
</example>
</usage>
</directivesynopsis>


<directivesynopsis>
<name>WebAuthLdapAuthorizationAttribute</name>
<description>LDAP attribute for authorization group membership</description>
<syntax>WebAuthLdapAuthorizationAttribute <em>ldap_attribute_name</em></syntax>
<default>none</default>
<contextlist>
  <context>server config</context>
  <context>virtual host</context>
</contextlist>

<usage>
<p>Specifies the attribute in the LDAP directory in a user's entry that
contains the authorization groups that user is a member of.  This should
be a multi-valued attribute against with LDAP compare operations are
performed.  Each privgroup granted access to the URL being accessed will
be compared in turn against the values of this attribute and the user will
be granted access only if one of those privgroups match.</p>

<p>Note that this module does not use LDAP groups for authorization and
instead uses this multivalued attribute method.  Proper use of LDAP groups
may be added later.</p>

<note><title>Note</title> 
  <p>This directive must be set.</p>
</note>

<example><title>Example</title>
WebAuthLdapAuthorizationAttribute priviledgeAttribute
</example>
</usage>
</directivesynopsis>


<directivesynopsis>
<name>WebAuthLdapAuthrule</name>
<description>Whether to show authorization information</description>
<syntax>WebAuthLdapAuthrule <em>on|off</em></syntax>
<default>on</default>
<contextlist>
  <context>server config</context>
  <context>virtual host</context>
</contextlist>

<usage>
<p>By default, this module will put the authorization rule under which the
user was authorized into the WEBAUTH_LDAPAUTHRULE environment variable.
The value will be one of "valid-user", "user <em>user</em>", or "group
<em>privgroup</em>".  You can disable this behavior by setting this
directive to off.</p>

<example><title>Example</title>
WebAuthLdapAuthrule off
</example>
</usage>
</directivesynopsis>


<directivesynopsis>
<name>WebAuthLdapBase</name>
<description>Base for the LDAP lookup</description>
<syntax>WebAuthLdapBase <em>valid_search_base</em></syntax>
<default>none</default>
<contextlist>
  <context>server config</context>
  <context>virtual host</context>
</contextlist>

<usage>
<p>The lookup of the user's entry will begin at the specified search
base.</p>

<note><title>Note</title> 
  <p>This directive must be set.</p>
</note>

<example><title>Example</title>
WebAuthLdapBase cn=people,dc=acme,dc=com
</example>
</usage>
</directivesynopsis>


<directivesynopsis>
<name>WebAuthLdapBindDN</name>
<description>Bind DN for the LDAP lookup</description>
<syntax>WebAuthLdapBindDN <em>valid_bind_dn</em></syntax>
<default>none</default>
<contextlist>
  <context>server config</context>
  <context>virtual host</context>
</contextlist>

<usage>
<p>The bind DN specifies the LDAP identity that this module will use when
binding to the LDAP server.  Most OpenLDAP servers do not need an explicit
bind DN and determine the binding identity from the authentication
credentials, so this normally will not have to be set.</p>

<example><title>Example</title>
WebAuthLdapBindDN cn=myDN,dc=acme,dc=com
</example>
</usage>
</directivesynopsis>


<directivesynopsis>
<name>WebAuthLdapDebug</name>
<description>Set the debugging level for logging</description>
<syntax>WebAuthLdapDebug <em>on|off</em></syntax>
<default>off</default>
<contextlist>
  <context>server config</context>
  <context>virtual host</context>
</contextlist>

<usage>
<p>If set to on, additional tracing and debugging output will be sent to
the server log.  This output will include the stages of processing, the
LDAP parameters used, and the returned results.  It's rather verbose, so
should probably only be enabled during debugging.</p>

<example><title>Example</title>
WebAuthLdapDebug on
</example>
</usage>
</directivesynopsis>


<directivesynopsis>
<name>WebAuthLdapFilter</name>
<description>LDAP filter to use when searching for an entry</description>
<syntax>WebAuthLdapFilter <em>valid_ldap_filter</em></syntax>
<default>uid=USER</default>
<contextlist>
  <context>server config</context>
  <context>virtual host</context>
</contextlist>

<usage>
<p>This can be any properly formed LDAP filter.  The current user's
identity (from WebAuth) will be substituted for the upper-cased string
"USER".  The "USER" string may appear in the filter multiple times.  You
will want to set this attribute if your LDAP server puts the username in
an attribute other than uid, or if you want to add additional restrictions
to the search.</p>

<example><title>Example</title>
WebAuthLdapFilter (&amp;(objectClass=superson)(uid=USER))
</example>
</usage>
</directivesynopsis>


<directivesynopsis>
<name>WebAuthLdapHost</name>
<description>Hostname of the LDAP server</description>
<syntax>WebAuthLdapHost <em>hostname</em></syntax>
<default>none</default>
<contextlist>
  <context>server config</context>
  <context>virtual host</context>
</contextlist>

<usage>
<p>The LDAP server must support SASL GSSAPI Kerberos V binds.  No other
bind type is supported by mod_webauthldap at this time.</p>

<note><title>Note</title> 
  <p>This directive must be set.</p>
</note>

<example><title>Example</title>
  WebAuthLdapHost ldap.acme.com
</example>
</usage>
</directivesynopsis>


<directivesynopsis>
<name>WebAuthLdapKeytab</name>
<description>Keytab for LDAP server authentication</description>
<syntax>WebAuthLdapKeytab <em>path</em>  [<em>principal</em>]</syntax>
<default>none</default>
<contextlist>
  <context>server config</context>
  <context>virtual host</context>
</contextlist>

<usage>
<p>Specifies the keytab used for GSSAPI authentication to the LDAP
server.  This keytab should contain an entry for the principal that has
access to the desired LDAP attributes.  If the keytab contains several
principals, use the optional second argument to this directive to indicate
the principal to use.</p>

<p>If the path is not absolute, it will be treated as being relative to
<code>ServerRoot</code>.</p>

<note><title>Note</title> 
  <p>This directive must be set.</p>
</note>

<example><title>Example</title>
WebAuthLdapKeytab conf/webauth/ldapkeytab webauth/myservername
</example>
</usage>
</directivesynopsis>


<directivesynopsis>
<name>WebAuthLdapPort</name>
<description>LDAP server port</description>
<syntax>WebAuthLdapPort <em>port_num</em></syntax>
<default>389</default>
<contextlist>
  <context>server config</context>
  <context>virtual host</context>
</contextlist>

<usage>
<p>Normally, you will never need to change this, even if using SSL.  Some
LDAP servers may require SSL connections on port 636 (but this is a
deprecated configuration).</p>

<example><title>Example</title>
WebAuthLdapPort 389
</example>
</usage>
</directivesynopsis>


<directivesynopsis>
<name>WebAuthLdapSeparator</name>
<description>Separator for multi-valued attributes</description>
<syntax>WebAuthLdapSeparator <em>separator</em></syntax>
<default>none</default>
<contextlist>
  <context>server config</context>
  <context>virtual host</context>
</contextlist>

<usage>
<p>If set, overrides the default handling of multi-valued attributes.
Normally, one value chosen at random will go into the base
WEBAUTH_LDAP_ATTRIBUTE environment variable and then all of the attributes
will go into separate environment variables formed by appending a number
to that basic name.  When this attribute is set, the individual numbered
variables will still be set, but the unnumbered WEBAUTH_LDAP_ATTRIBUTE
variable will be set to the concatenation of all of the values found,
separated by the given separator string.  Nothing special will be done to
any occurrances of the separator string in the values, so pick a separator
that doesn't occur in the values you're working with.</p>

<example><title>Example</title>
WebAuthLdapSeparator |
</example>
</usage>
</directivesynopsis>


<directivesynopsis>
<name>WebAuthLdapSSL</name>
<description>Whether to use SSL with LDAP connections</description>
<syntax>WebAuthLdapSSL <em>on|off</em></syntax>
<default>off</default>
<contextlist>
  <context>server config</context>
  <context>virtual host</context>
</contextlist>

<usage>
<p>If set, this module will use SSL when talking to the LDAP server.  The
LDAP server must support SSL or LDAP connections will fail.  This will
slow LDAP lookups and incur more load on the server and client, and GSSAPI
normally already encrypts the session, so setting this option is rarely
needed.</p>

<example><title>Example</title>
WebAuthLdapSSL on
</example>
</usage>
</directivesynopsis>


<directivesynopsis>
<name>WebAuthLdapTktCache</name>
<description>Path to the Kerberos credentials cache file</description>
<syntax>WebAuthLdapTktCache <em>path</em></syntax>
<default>none</default>
<contextlist>
  <context>server config</context>
  <context>virtual host</context>
</contextlist>

<usage>
<p>If this cache exists and is valid and readable, it will be used until
it expires.  After expiration, or if it doesn't exist, the specified
keytab will be used to obtain a new ticket which is stored in this
cache.</p>

<p>If the path is not absolute, it will be treated as being relative to
<code>ServerRoot</code>.</p>

<note><title>Note</title> 
  <p>This directive must be set.</p>
</note>

<example><title>Example</title>
WebAuthLdapTktCache /tmp/webauthldap.tkt
</example>
</usage>
</directivesynopsis>
</modulesynopsis>
