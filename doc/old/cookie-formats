Type One (authentication cookie):

    Protocol Version            number          2 bytes
    Session ID                  data            8 bytes
    Authentication Length       number          2 bytes
    Authentication Type         data            <specified above>
    Data Length                 number          2 bytes
    Data                        data            <specified above>

This allows variable-length authentication data depending on the chosen
authentication type.  The protocol version would be defined to be 3 to
start with, but we may increment it independently of the version number of
the webauth release itself if we need to rev the cookie format.  All
fields after the data field should be ignored, so we can tack new fields
onto the end with a higher protocol rev.

The session ID contains whatever information the server wishes to put
there.

The authentication type is a counted string specifying the type of
authentication being used.  When using Kerberos v5 service tickets, this
authentication type is KERBEROS_V5.  The authentication type is not case
sensitive.

The authentication data is some sort of identifier that can be checked by
the web server to be valid and to represent a particular user.

Any checksum or signature isn't useful unless it's encrypted somehow, so
this is left to the authentication data for those authentication protocols
that need something like this.

Type Two (authentication data used to obtain proxy tickets):

    Protocol Version            number          2 bytes
    Authentication Length       number          2 bytes
    Authentication Type         data            <specified above>
    Data Length                 number          2 bytes
    Data                        data            <specified above>

This is the opaque cookie handed to servers that are allowed to obtain
service tickets on behalf of other users.  The authentication type is a
counted string as above specifying the type of authentication information
contained in the data.  The data is an opaque, encrypted bit of data that
should be passed to the web KDC by the webauth server along with its
request for a service ticket on behalf of a user.

The two authentication types that we would be concerned with initially are
KERBEROS_V4 and KERBEROS_V5, holding encrypted TGTs for the respective
versions of Kerberos.

General Notes:

All cookies will be encoded in base64 before passing them to the client.
Numeric values are in network byte order.

The name of the first type of cookie is formed by prepending
"webauth-auth-" to the name of the service for which this cookie is an
authenticator (initially, this service name will be formed by taking the
Kerberos service principle and converting all /s to #).  For example, when
authenticated to a server named webauth1.stanford.edu providing a service
called service/stanford-you, the cookie name would be:

    webauth-auth-service#stanford-you

Similarly, the name of the second type of cookie is formed by prepending
"webauth-tgtk4-" or "webauth-tgtk5-" to the service name (formed by
similarly converting the Kerberos service principle as above), with the
name depending on whether it holds the Kerberos v4 authenticator or the
Kerberos v5 authenticator.

The domain of the cookies will in all cases be the name of the web service
that is setting the cookie; in other words, there are no domain-wide
cookies in thie protocol.  The expiration time will always be left
unspecified, creating a session cookie.  The path of the cookie, in this
initial implementation, will always be /.
