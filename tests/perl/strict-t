#!/usr/bin/perl
#
# Check Perl scripts for strict, warnings, and syntax.
#
# Checks all Perl scripts in the tree for problems uncovered by Test::Strict.
# This includes using strict and warnings for every script and ensuring they
# all pass a syntax check.  Currently, test suite coverage is not checked.
#
# Copyright 2012
#     The Board of Trustees of the Leland Stanford Junior University
#
# See LICENSE for licensing terms.

use strict;
use warnings;

use Test::More;

# Skip tests if Test::Strict is not installed.
eval { use Test::Strict };
if ($@) {
    plan skip_all => 'Test::Strict required to test Perl scripts';
}

# Convert a directory name, relative to the parent of SOURCE, into a full
# path.
sub path_of_dir {
    my ($dir) = @_;
    my $path = $ENV{SOURCE} . '/../' . $dir;
    $path =~ s{ [^/]+ / .. / }{}xms;
    return $path;
}

# Build the list of directories to test.  We test all Perl scripts in all
# top-level directories except those in perl, since the files under perl
# are trested as a Perl module distribution and have their own standalone
# test suite.
if (!$ENV{SOURCE}) {
    BAIL_OUT('SOURCE not defined (run under runtests)');
}
opendir my $root, $ENV{SOURCE} . '/..'
    or die "Cannot open $ENV{SOURCE}/..";
my @dirs = grep { -d $_ && !m{ \A [.] }xms && $_ ne 'perl' } readdir $root;
closedir $root;
my @paths = map { path_of_dir($_) } @dirs;

# Finally, run the actual tests.  We also want to check use warnings.
$Test::Strict::TEST_WARNINGS = 1;
all_perl_files_ok(@paths);
