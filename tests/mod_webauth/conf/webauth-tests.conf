# Apache configuration for mod_webauth test suite.
#
# This test suite assumes that WebAuth has already been installed and
# configured according to the instructions in INSTALL and the sample
# configuration in conf/sample-webauth.conf.
#
# Written by Roland Schemers
# Copyright 2003, 2006, 2009 Board of Trustees, Leland Stanford Jr. University
#
# See LICENSE for licensing terms.

# Allow access to tests and set the default for WebAuthExtraRedirect to false
# so that we can test its behavior.
<Location "/tests/">
    Order allow,deny
    Allow from all
    WebAuthExtraRedirect off
</Location>

# Some other general supporting infrastructure for all tests.
<Location "/tests/auth/logout">
    WebAuthDoLogout on
</Location>
<Location "/tests/unauth/">
    Options ExecCGI
    SetHandler cgi-script
</Location>

# Require WebAuth authentication for everything under /tests/auth and enable
# CGI scripts so that the test scripts run.
<Location "/tests/auth/">
    Options ExecCGI
    AuthType WebAuth
    require valid-user
    SetHandler cgi-script
</Location>

# Test basic WebAuth-protected page.
<Location "/tests/auth/test1">
    # normal webauth case
</Location>

# Test the extra redirect on a return URL.
<Location "/tests/auth/test2">
    WebAuthReturnURL /tests/auth/test2return
</Location>
<Location "/tests/auth/test2return">
    WebAuthExtraRedirect on
</Location>

# Change the environment variable prefix.
<Location "/tests/auth/test3">
    WebAuthVarPrefix TEST_
</Location>

# Configure a cancel URL, which allows the user to return to a different page
# when cancelling authentication.
<Location "/tests/auth/test4">
    WebAuthLoginCanceledURL /tests/unauth/test4
</Location>

# Test returning to a different URL without an extra redirect.
<Location "/tests/auth/test5">
    WebAuthReturnURL /tests/auth/test5return
</Location>

# Test preservation of query parameters after an initial redirect.
<Location "/tests/auth/test6">
    WebAuthReturnURL /tests/auth/test6return?x=1&y=2
</Location>
<Location "/tests/auth/test6return">
    # nothing
</Location>

# Set an application token lifetime of five seconds.
<Location "/tests/auth/test7">
    WebAuthReturnURL /tests/auth/test7return
</Location>
<Location "/tests/auth/test7return">
    WebAuthAppTokenLifetime 5s
</Location>

# Set an application token lifetime of five seconds and force login.
<Location "/tests/auth/test8">
    WebAuthForceLogin on
    WebAuthReturnURL /tests/auth/test8return
</Location>
<Location "/tests/auth/test8return">
    WebAuthAppTokenLifetime 5s
</Location>

# Test inactive expiration and the last use update interval settings.
<Location "/tests/auth/test9">
    WebAuthInactiveExpire 60m
    WebAuthLastUseUpdateInterval 5s
</Location>

# The same, but with force login, which makes it more interesting and useful.
<Location "/tests/auth/test10">
    WebAuthForceLogin on
    WebAuthInactiveExpire 20s
    WebAuthLastUseUpdateInterval 5s
</Location>

# Test that after the initial redirect a script doesn't see any query
# parameters.
<Location "/tests/auth/test11">
    WebAuthReturnURL /tests/auth/test11return
</Location>
<Location "/tests/auth/test11return">
    # nothing
</Location>

# Check handling of POST with an expired cookie.
<Location "/tests/auth/test12">
    WebAuthReturnURL /tests/auth/test12return
</Location>
<Location "/tests/auth/test12return">
    WebAuthAppTokenLifetime 1s
    WebAuthPostReturnURL /tests/auth/test12post
</Location>

# Check handling of lazy sessions.
<Location "/tests/auth/test13">
    WebAuthOptional on
</Location>
<Location "/tests/auth/test13login">
    WebAuthReturnURL /tests/auth/test13
</Location>

# Test WebAuth authentication with PHP by requiring WebAuth for everything
# under /tests/php/.
<Location "/tests/php/">
    AuthType WebAuth
    WebAuthVarPrefix HTTP_
    require valid-user
</Location>

# Require WebAuth authentication for everything under /tests/multifactor
# and enable CGI scripts so that the test scripts run.
<Location "/tests/multifactor/">
    Options ExecCGI
    AuthType WebAuth
    require valid-user
    SetHandler cgi-script
</Location>

# Test basic multifactor requirement.
<Location "/tests/multifactor/test1">
    WebAuthRequireInitialFactor m
</Location>

# Test any OTP multifactor requirement.
<Location "/tests/multifactor/test2">
    WebAuthRequireInitialFactor o
</Location>

# Test two factors explicitly to test that parsing.
<Location "/tests/multifactor/test3">
    WebAuthRequireInitialFactor p o
</Location>

# Test random multifactor requirement.
<Location "/tests/multifactor/test4">
    WebAuthRequireInitialFactor rm
</Location>

# Test specific multifactor requirement.
<Location "/tests/multifactor/test5">
    WebAuthRequireInitialFactor o3
</Location>

# Test LoA sufficient for any user.
<Location "/tests/multifactor/test6">
    WebAuthRequireLOA 1
</Location>

# Test LoA sufficient for any otp users.
<Location "/tests/multifactor/test7">
    WebAuthRequireLOA 2
</Location>

# Test LoA sufficient for strong otp users.
<Location "/tests/multifactor/test8">
    WebAuthRequireLOA 3
</Location>

# Test LoA too strong for any user.
<Location "/tests/multifactor/test9">
    WebAuthRequireLOA 100
    WebAuthLoginCanceledURL /tests/unauth/test4
</Location>

# Test all of LoA, session, and initial factors together.
<Location "/tests/multifactor/test10">
    WebAuthRequireInitialFactor o3
    WebAuthRequireSessionFactor m
    WebAuthRequireLOA 2
</Location>

# Test force-login with a password.
<Location "/tests/multifactor/test11">
    WebAuthRequireSessionFactor p
</Location>

# Test force-login with multifactor.
<Location "/tests/multifactor/test12">
    WebAuthRequireSessionFactor m
</Location>

# Test force-login with negotiate auth.
<Location "/tests/multifactor/test13">
    WebAuthRequireSessionFactor k
</Location>

# Test force-login with either password or cookie.
<Location "/tests/multifactor/test14">
    WebAuthRequireSessionFactor c p
</Location>
